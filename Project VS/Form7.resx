<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQgAAABjCAMAAABQbG7gAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABm1BMVEX29/xaV7VLR65MSK5YVbR7eMTE
        xOXp6vaVlNBkYblQTLBUUbJwbb+urNv19vvz9PupqNltar5TT7KPjc3b2+/KyeiioNVgXbhkYbqvrtzA
        wOR5d8NYVLROSq9eWreJhsrc3PCNi8zu7/jBwORyb8De3vHZ2e9tar3z9Pp/fcbr6/eHhMlSTrGqqdmI
        hsrR0etNSa/x8frr7Pd9e8W0s97x8vplYrqKiMu1tN7j4/N7ecS7uuFQTbDt7vjm5vVMSK+AfsZmY7qc
        m9NaVrWTks++vuN1csF8ecSQjs7p6faFg8mqqNmwr9zMzOmdm9O6ueDY2e9zcMBeW7d3dcKfndTCweSE
        gsiBfsaXldG2td+Bf8fS0uzn5/Vsab1UULL19vy3tt+Zl9GendRfXLeZmNJnZLuDgcjl5vSmpdjAv+OJ
        h8qHhcp9esWysd2MisyGhMlRTbFXU7R6d8PEw+Wop9lST7Ghn9VgXLd5dsNdWrbX1+7FxeakotZPS7Bp
        Zrz09ftcWLalo9fn6PXd3fHq6/bQ0OuVk9BjYLn///8HJcySAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA
        B3RJTUUH5gYCBS0S/NiGWAAAADV0RVh0Q29tbWVudAB4cjpkOkRBRkNScUdmWVBBOjEwMyxqOjI3NjY0
        NDkzMjE2LHQ6MjIwNjAyMDWEhLf+AAAEKElEQVR4Xu2b9VvcQBCGt6ECtaMtNWpUaalRd6hTd3d3d3f5
        t8vNfKVJbucyzV3OmPenzM53z8GLXJ7djDMMwzAMwzCMMjMkEGgaOmw4MsSI5paRaIUZNXrMWCTy5FrH
        jUenkAkUaeNiIhUD5CZN5vVgClY8TEVEgt8gT/u06VgLM2PmrA4EChBF5Jk9Bynn5srBefORcW5BJ9a8
        FBGxcBGv9lMGEV2LsVDIkqXIxCkqIliGlFvejRUfLSuQWjkTK35kESEP5RCxCrWX1QjFKC4imMupNWtR
        +2nmlFuHWkAUEfZQBhHrUfoZtYFTMRJEbOTUJpQCm7dQqqcXtYAkIreVl5jSRWxDKbCdUzESROzg1E6U
        Evxd7UIlIYiIeihdRBcqid2UisMi+qYWsIcawV5K7aPrFrRC7KdGsIlSB7hAq5CDlIqLGPDQe4hSh7Hu
        4QgFwFF60TFUBL9BBzWCZiyGOE6NbZSKwyJOoApxkhpBDxWn6Nqjcg41Av7i8QOja5mYiNxproPe9VhR
        MoFe1YkqhOefEDhDDf+vXLVF/PNwlhfUNJaI9B4aS0TuHBcpPDSUiFI8ZCNi9vkCWqkRXKAUi7iIVoiD
        1Egj4kD/q0vxkI0IkUuXKcUiZFKICNF9Ba3/orIirnIqUxHpPFRUxLFrOU5lKSKlh4qKuH7CRIAbnBrs
        fxqD759ltT8+05jIRES1bqjS32A3loiSTDSUiNBmxH+baCwRJZhoMBHpTWQiImmrTici8626CKKIpK26
        m8hFYREi2LzViUi5ebvwrwnG/wMrRBSRtHl7C7koCSKwna8TcTvldn7URMkikrbz7yAWJUHEXU7pRLh7
        XElIItQHPBFkEaupI3EpzQHPfaSUIrI+8osgi3APqCXwEKEYRUU84hMstYisD4EjFBHR9Zh6Pp60IhNH
        FNH09NlzZPQiXO5F50te8lBEhMu9es3r5RDh3N03T6kdpfvt/TYEDMMwDMMwDMMwDMMw6g757II3p3jz
        JY9uZOLd47eeB/+bhva9R4AQhkWYgV2hiqIVoRuZGPvhIxYL0Q2L9FPbInQjEy+w4GUWQsWHRWpchG5k
        om0zFvy0cyphWKS2RehGJnCsKDGPUwnDIjUtQjky8QmlQPdnSiUNi9SyCOXIxBcq+AT6K10He6jAr8o3
        SonDIuA7pSqNToT/7CJP5GSePwz4mYQeug5OUqF7JqGqmAhgIoCJACYCQAQ/bhqBb3syE+F52hX8oFSl
        gQiRzETIVPU+QsREABMBTAQwEWCwicAnV5jB+fGJKozdWQITAUwEMBHARICwCOXIhE5EPW/VKUcmdCLq
        efNWOTKhE1HP2/nKkQmdiBVTuJKoaRG6kQmdCPezjo/8dCMTShGufQfXfmpbhGpkQivC7f31u9YeCzAM
        wzAMwzD6ce4PeIBVVTFXH5kAAAAASUVORK5CYII=
</value>
  </data>
</root>